
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4    &kp N5              &mo 3     &tog 1    &kp N6     &kp N7     &kp N8    &kp N9     &kp N0  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R     &kp T             &trans      &none     &kp Y      &kp U      &kp I     &kp O      &kp P   &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F     &kp G              &none  &kp LCTRL  &kp LALT                        &kp RALT  &kp RCTRL      &none     &kp H   &kp J      &kp K    &kp L  &kp SEMI    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V     &kp B              &none      &none  &kp LGUI      &none      &none  &kp RGUI      &none      &none     &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT  &kp BSPC            &kp DEL   &kp HOME   &kp END  &kp ENTER  &kp SPACE  &kp DOWN     &kp UP   &kp LBKT  &kp RBKT   &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY      &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS      &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                                   &trans           &trans      &trans        &trans  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS  &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans       &none         &none         &trans            &none       &none        &trans  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_ENTER  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans      &trans        &trans      &kp KP_N0        &kp KP_N0  &kp KP_DOT  &kp KP_ENTER     &trans
            >;
        };

        layer_fn {
            bindings = <
 &trans  &kp F1      &kp F2            &kp F3      &kp F4  &kp F5            &trans  &trans  &kp F6  &kp F7  &kp F8   &kp F9  &kp F10  &trans
 &trans  &trans      &trans      &kp C_VOL_UP      &trans  &trans            &trans  &trans  &trans  &trans  &trans  &kp F11  &kp F12  &trans
 &trans  &trans  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &trans            &trans  &trans  &trans                   &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans      &trans      &kp C_VOL_DN      &trans  &trans             &none   &none  &trans   &none   &none   &trans    &none   &none  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans      &trans            &trans      &trans  &trans            &trans  &trans  &trans  &trans  &trans   &trans   &trans  &trans  &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                 &none                   &none                   &none            &none       &none                   &none                   &none   &none
  &none         &none         &none         &none         &none         &none                 &none                   &none                   &none            &none       &none                   &none                   &none   &none
  &none         &none         &none         &none         &none         &none                 &none  &rgb_ug RGB_MEFS_CMD 5  &rgb_ug RGB_MEFS_CMD 5                               &rgb_ug RGB_MEFS_CMD 5  &rgb_ug RGB_MEFS_CMD 5   &none        &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                 &none                   &none                   &none            &none       &none                   &none                   &none   &none        &none   &none   &none   &none   &none   &none
  &none   &bootloader         &none    &bl BL_DEC    &bl BL_INC    &bt BT_CLR            &bt BT_CLR                   &none                   &none  &rgb_ug RGB_TOG  &bl BL_TOG              &bl BL_DEC              &bl BL_INC   &none  &bootloader   &none
            >;
        };

        layer_FPS {
            bindings = <
   &kp ESC  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                &none      &none           &none   &none   &none          &none   &none   &none
   &kp TAB         &kp T         &kp Q         &kp W         &kp E         &kp R               &trans      &none           &none   &none   &none          &none   &none   &none
  &kp CAPS         &kp G         &kp A         &kp S         &kp D         &kp F                &none  &kp LCTRL        &kp LALT                          &none   &none   &none   &none   &none   &none   &none   &none   &none
 &kp LSHFT         &kp B         &kp Z         &kp X         &kp C         &kp V               &trans     &trans  &kp LEFT_SHIFT  &trans  &trans  &kp RIGHT_WIN  &trans  &trans   &none   &none   &none   &none   &none   &none
    &trans     &kp GRAVE         &none         &none         &none     &kp SPACE            &kp SPACE      &none           &none   &none   &none          &none   &none   &none   &none  &trans
            >;
        };

    };
};
